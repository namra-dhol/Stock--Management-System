@model ProductViewModel
@{
    ViewData["Title"] = "Product Management";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2 class="mb-0">Product Management</h2>
    <a asp-controller="Product" asp-action="AddEdit" class="btn btn-primary">
        <i class="bi bi-plus-circle me-2"></i>Add New Product
    </a>
</div>

<!-- Filters Section -->
<div class="card mb-4">
    <div class="card-header">
        <h5 class="mb-0">
            <i class="bi bi-funnel me-2"></i>Filters & Search
        </h5>
    </div>
    <div class="card-body">
        <form method="get" asp-action="ProductList" id="filterForm">
            <div class="row">
                <div class="col-md-3 mb-3">
                    <label asp-for="SearchTerm" class="form-label">Search Product</label>
                    <input asp-for="SearchTerm" class="form-control" placeholder="Enter product name..." />
                </div>
                <div class="col-md-2 mb-3">
                    <label asp-for="CategoryFilter" class="form-label">Category</label>
                    <select asp-for="CategoryFilter" asp-items="Model.Categories" class="form-select">
                    </select>
                </div>
                <div class="col-md-2 mb-3">
                    <label asp-for="SupplierFilter" class="form-label">Supplier</label>
                    <select asp-for="SupplierFilter" asp-items="Model.Suppliers" class="form-select">
                    </select>
                </div>
                <div class="col-md-2 mb-3">
                    <label asp-for="MinPrice" class="form-label">Min Price</label>
                    <input asp-for="MinPrice" class="form-control" type="number" step="0.01" min="0" />
                </div>
                <div class="col-md-2 mb-3">
                    <label asp-for="MaxPrice" class="form-label">Max Price</label>
                    <input asp-for="MaxPrice" class="form-control" type="number" step="0.01" min="0" />
                </div>
                <div class="col-md-1 mb-3 d-flex align-items-end">
                    <button type="submit" class="btn btn-primary me-2">
                        <i class="bi bi-search"></i>
                    </button>
                    <a href="@Url.Action("ProductList")" class="btn btn-outline-secondary">
                        <i class="bi bi-x-circle"></i>
                    </a>
                </div>
            </div>
            
            <!-- Hidden fields for pagination and sorting -->
            <input type="hidden" asp-for="CurrentPage" />
            <input type="hidden" asp-for="SortBy" />
            <input type="hidden" asp-for="SortOrder" />
        </form>
    </div>
</div>

<!-- Results Summary -->
<div class="d-flex justify-content-between align-items-center mb-3">
    <div>
        <span class="text-muted">
            Showing @((Model.CurrentPage - 1) * Model.PageSize + 1) to 
            @Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalItems) 
            of @Model.TotalItems products
        </span>
    </div>
    <div>
        <label class="form-label me-2">Page Size:</label>
        <select class="form-select d-inline-block w-auto" onchange="changePageSize(this.value)">
            <option value="10" selected="@(Model.PageSize == 10)">10</option>
            <option value="25" selected="@(Model.PageSize == 25)">25</option>
            <option value="50" selected="@(Model.PageSize == 50)">50</option>
        </select>
    </div>
</div>

<!-- Products Table -->
<div class="card">
    <div class="card-body">
        @if (Model.Products.Any())
        {
            <div class="table-responsive">
                <table class="table table-bordered table-striped table-hover">
                    <thead class="table-dark">
                        <tr>
                            <th>
                                <a href="javascript:void(0)" onclick="sortTable('ProductId')" class="text-white text-decoration-none">
                                    Product ID
                                    @if (Model.SortBy == "ProductId")
                                    {
                                        <i class="bi bi-arrow-@(Model.SortOrder == "asc" ? "up" : "down")"></i>
                                    }
                                </a>
                            </th>
                            <th>
                                <a href="javascript:void(0)" onclick="sortTable('ProductName')" class="text-white text-decoration-none">
                                    Product Name
                                    @if (Model.SortBy == "ProductName")
                                    {
                                        <i class="bi bi-arrow-@(Model.SortOrder == "asc" ? "up" : "down")"></i>
                                    }
                                </a>
                            </th>
                            <th>Unit</th>
                            <th>
                                <a href="javascript:void(0)" onclick="sortTable('CostPrice')" class="text-white text-decoration-none">
                                    Cost Price
                                    @if (Model.SortBy == "CostPrice")
                                    {
                                        <i class="bi bi-arrow-@(Model.SortOrder == "asc" ? "up" : "down")"></i>
                                    }
                                </a>
                            </th>
                            <th>
                                <a href="javascript:void(0)" onclick="sortTable('SellingPrice')" class="text-white text-decoration-none">
                                    Selling Price
                                    @if (Model.SortBy == "SellingPrice")
                                    {
                                        <i class="bi bi-arrow-@(Model.SortOrder == "asc" ? "up" : "down")"></i>
                                    }
                                </a>
                            </th>
                            <th>
                                <a href="javascript:void(0)" onclick="sortTable('StockLevel')" class="text-white text-decoration-none">
                                    Stock Level
                                    @if (Model.SortBy == "StockLevel")
                                    {
                                        <i class="bi bi-arrow-@(Model.SortOrder == "asc" ? "up" : "down")"></i>
                                    }
                                </a>
                            </th>
                            <th>
                                <a href="javascript:void(0)" onclick="sortTable('Category')" class="text-white text-decoration-none">
                                    Category
                                    @if (Model.SortBy == "Category")
                                    {
                                        <i class="bi bi-arrow-@(Model.SortOrder == "asc" ? "up" : "down")"></i>
                                    }
                                </a>
                            </th>
                            <th>Supplier</th>
                            <th style="width: 150px;">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Products)
                        {
                            <tr>
                                <td>@item.ProductId</td>
                                <td>
                                    <strong>@item.ProductName</strong>
                                </td>
                                <td>@item.Unit</td>
                                <td>₹@item.CostPrice?.ToString("N2")</td>
                                <td>₹@item.SellingPrice?.ToString("N2")</td>
                                <td>
                                    <span class="badge @(item.StockLevel < 10 ? "bg-danger" : item.StockLevel < 50 ? "bg-warning" : "bg-success")">
                                        @item.StockLevel
                                        @if (item.StockLevel < 10)
                                        {
                                            <i class="bi bi-exclamation-triangle ms-1"></i>
                                        }
                                    </span>
                                </td>
                                <td>
                                    @if (item.Category != null)
                                    {
                                        <span class="badge bg-info">@item.Category.CategoryName</span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">No Category</span>
                                    }
                                </td>
                                <td>
                                    @if (item.Supplier != null)
                                    {
                                        <span class="badge bg-secondary">@item.Supplier.SupplierName</span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">No Supplier</span>
                                    }
                                </td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <a asp-action="AddEdit" asp-route-id="@item.ProductId" class="btn btn-sm btn-primary" title="Edit">
                                            <i class="bi bi-pencil"></i>
                                        </a>
                                        <button type="button" class="btn btn-sm btn-danger" onclick="deleteProduct(@item.ProductId, '@item.ProductName')" title="Delete">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            @if (Model.TotalPages > 1)
            {
                <nav aria-label="Product pagination" class="mt-4">
                    <ul class="pagination justify-content-center">
                        <li class="page-item @(!Model.HasPreviousPage ? "disabled" : "")">
                            <a class="page-link" href="javascript:void(0)" onclick="changePage(@(Model.CurrentPage - 1))">
                                <i class="bi bi-chevron-left"></i> Previous
                            </a>
                        </li>

                        @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                        {
                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                <a class="page-link" href="javascript:void(0)" onclick="changePage(@i)">@i</a>
                            </li>
                        }

                        <li class="page-item @(!Model.HasNextPage ? "disabled" : "")">
                            <a class="page-link" href="javascript:void(0)" onclick="changePage(@(Model.CurrentPage + 1))">
                                Next <i class="bi bi-chevron-right"></i>
                            </a>
                        </li>
                    </ul>
                </nav>
            }
        }
        else
        {
            <div class="text-center py-5">
                <i class="bi bi-box-seam display-1 text-muted"></i>
                <h4 class="text-muted mt-3">No Products Found</h4>
                <p class="text-muted">
                    @if (!string.IsNullOrEmpty(Model.SearchTerm) || Model.CategoryFilter.HasValue || Model.SupplierFilter.HasValue)
                    {
                        <span>No products match your current filters. <a href="@Url.Action("ProductList")">Clear filters</a> to see all products.</span>
                    }
                    else
                    {
                        <span>Get started by adding your first product.</span>
                    }
                </p>
                <a asp-action="AddEdit" class="btn btn-primary">
                    <i class="bi bi-plus-circle me-2"></i>Add First Product
                </a>
            </div>
        }
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete the product "<span id="productName"></span>"?</p>
                <p class="text-danger"><small>This action cannot be undone.</small></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form method="post" asp-action="Delete" style="display: inline;">
                    <input type="hidden" id="deleteProductId" name="id" />
                    <button type="submit" class="btn btn-danger">Delete Product</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    function sortTable(column) {
        const currentSort = '@Model.SortBy';
        const currentOrder = '@Model.SortOrder';
        
        let newOrder = 'asc';
        if (currentSort === column && currentOrder === 'asc') {
            newOrder = 'desc';
        }
        
        document.querySelector('input[name="SortBy"]').value = column;
        document.querySelector('input[name="SortOrder"]').value = newOrder;
        document.querySelector('input[name="CurrentPage"]').value = 1;
        document.getElementById('filterForm').submit();
    }

    function changePage(page) {
        if (page < 1 || page > @Model.TotalPages) return;
        document.querySelector('input[name="CurrentPage"]').value = page;
        document.getElementById('filterForm').submit();
    }

    function changePageSize(pageSize) {
        document.querySelector('input[name="CurrentPage"]').value = 1;
        
        // Add page size to form
        let pageSizeInput = document.querySelector('input[name="PageSize"]');
        if (!pageSizeInput) {
            pageSizeInput = document.createElement('input');
            pageSizeInput.type = 'hidden';
            pageSizeInput.name = 'PageSize';
            document.getElementById('filterForm').appendChild(pageSizeInput);
        }
        pageSizeInput.value = pageSize;
        
        document.getElementById('filterForm').submit();
    }

    function deleteProduct(id, name) {
        document.getElementById('deleteProductId').value = id;
        document.getElementById('productName').textContent = name;
        new bootstrap.Modal(document.getElementById('deleteModal')).show();
    }

    // Auto-submit form on filter changes
    document.addEventListener('DOMContentLoaded', function() {
        const filterInputs = document.querySelectorAll('#filterForm select');
        filterInputs.forEach(input => {
            input.addEventListener('change', function() {
                document.querySelector('input[name="CurrentPage"]').value = 1;
                document.getElementById('filterForm').submit();
            });
        });
    });
</script>

<style>
    .badge {
        font-size: 0.75em;
    }
    
    .table th a {
        display: block;
        padding: 0.5rem;
        margin: -0.5rem;
    }
    
    .table th a:hover {
        background-color: rgba(255,255,255,0.1);
        border-radius: 4px;
    }
    
    .btn-group .btn {
        margin-right: 2px;
    }
    
    .btn-group .btn:last-child {
        margin-right: 0;
    }
</style>
